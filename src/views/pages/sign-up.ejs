<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
    <style>
      .button {
        font-family: 'Balsamiq Sans', cursive;
      }
      .label{
        font-family: 'Balsamiq Sans', cursive;
      }
    </style>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label class="label">Login</label>
      <input class="input is-rounded" style="width: 33%; margin-left: 5px;" id="login" type="text" name="login" />
      <label class="label">Password</label>
      <input type="password" class="input is-rounded" style="width: 33%; margin-left: 5px;" name="password" />
      <button class="button is-rounded">Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      // CS5356 TODO #2
      apiKey: "AIzaSyAL3Kpw3UjhROUgRQpnmV0m9NDDoZQw7D0",
      authDomain: "milestone-1-gl.firebaseapp.com",
      projectId: "milestone-1-gl",
      storageBucket: "milestone-1-gl.appspot.com",
      messagingSenderId: "358158722021",
      appId: "1:358158722021:web:0feaf80c70dcda7388450c"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;
        let uid;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        firebase.auth().createUserWithEmailAndPassword(login, password)
          .then((userCredential) => {
            var user = userCredential.user;
            return userCredential.user.getIdToken().then(
              idToken => {
                fetch('/sessionLogin', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ idToken })
                }).then(() => console.log('success!')).then(()=>window.location.assign('/dashboard'))
              }
            );
          })
          .catch((error) => {
            var errorCode = error.code;
            var errorMessage = error.message;
          });
        return false;
      });
  };
</script>

</html>